other hand, in G′ , conditioning on Z makes X and Y dependent, resulting in Px (y|z) becoming non-identifiable.
The past decade has yielded several sufficient conditions
for identifiability in the semi-Markovian case [Spirtes, Glymour, & Scheines, 1993], [Pearl & Robins, 1995], [Pearl,
1995], [Kuroki & Miyakawa, 1999]. An overview of this
work can be found in [Pearl, 2000]. Generally, sufficiency
results for this problem rely on the causal and probabilistic assumptions embedded in the graph, and are phrased as
graphical criteria. For example, it is known that whenever
a set Z of non-descendants of X blocks
certain paths in the
P
graph from X to Y, then Px (y) = z P (y|z, x)P (z) [Pearl,
2000].
Identification of causal effects can also be deduced by
algebraic methods. [Pearl, 1995] provided 3 rules of
do-calculus, which systematically use properties of the
graph to manipulate interventional distribution expressions. These manipulations can be applied until the effect
is reduced to something computable from P . Similarly,
[Halpern, 2000] constructed a system of axioms and inference rules which can frame the identification problem as
one of theorem proving. The axiom set was then shown to
be complete. Algebraic methods such as these have the disadvantage of requiring the user to come up with a proof
strategy to show identifiability in any given case, rather
than giving an explicit graphical criterion.

X
X

X

W

Z
Z
Y
(a)

Y
(b)

Z

Y
(c)

Figure 1: (a) Graph G. (b) Graph G′ . (c) Graph G′′ .
A number of necessity results have recently been derived
as well. One such result [Tian & Pearl, 2002] states that Px
is identifiable if and only if there is no path consisting entirely of bidirected arcs from X to a child of X. A recent
paper [Shpitser & Pearl, 2006] constructed a complete algorithm for identifying Px (y), and showed do-calculus and
a version of Tian’s algorithm [Tian, 2002] to be complete
for the same identification problem. The last result is also
shown in [Huang & Valtorta, 2006]. A general algorithm
for identifying Px (y|z) has been proposed in [Tian, 2004].
Unfortunately, as we will later show, the algorithm has its
limitations.
In this paper, we use the above necessity results to solve the
problem of identifying conditional distributions Px (y|z).
We show a way to reduce this problem to identifying
unconditional distributions of the form Px′ (y′ ), for which
complete criteria and algorithms are already known. We
then use this reduction to give a complete graphical criterion for identification of conditional effects, and a complete
algorithm which returns an expression for such an effect in
terms of P whenever the criterion holds. We use our results to prove completeness of do-calculus [Pearl, 1995] for
identifying conditional effects.

2

Motivation: Sequential Decisions

Our interest in conditional interventional distributions can
be motivated by their relationship to sequential decision
problems that arise in many domains [Pearl & Robins,
1995]. We will use an example from treatment management in medicine. A patient comes in, complaining of a set
of symptoms Z0 . After administering some tests Z1 of his
own, the doctor prescribes a treatment X 1 = g1 (Z0 , Z1 ).
After a time, additional tests Z2 are done to check for medication side effects, patient improvement, complications,
and so on. Possibly a followup treatment X 2 = g2 (Z2 , X 1 )
is prescribed. In general, the treatment X i at time i is
a function of treatment history X<i and observation history Z<i . The treatment process continues until the patient
gets well or dies – represented by the state of outcome
variables Y. Note that in this situation, the doctor performs interventions do(xi ), but the specific values of the
treatment variables are not known in advance, but instead
depend on symptoms and test results performed ’on the fly’
via policy functions gi .

The effect of this kind of conditional policy g = {gi |i =
1, ..., K} is represented as the probability distribution on Y
given that the treatment variables X = {X i |i = 1, ..., K}
are fixed according to g. We write this is P (YXg ). To evaluate the efficacy of g, it would be useful to determine
P (YXg ) from statistical data available to the hospital regarding similar cases in the past, rather than resorting to
testing the policy on the patient. Note that this effect is a
complex counterfactual quantity because observation history Z<i and treatment history X<i are mutually dependent (by either g, or the normal causative mechanisms in
the model). NeverthelessSit can be shown that by doing
case analysis on Z = i Zi , we can obtain P (yXg ) =
P
z Pxz (y|z)Pxz (z), where xz is the treatment prescribed
given that Z is observed to be z. The key observation is
that since the policy g is known in advance, fixing z determines xz in advance as well. Thus, the effect of sequential
conditional plans can be identified from data if we can find
a way of identifying conditional distributions of the form
Px (y|z).

3

Notation and Definitions

In this section we reproduce the technical definitions
needed for the rest of the paper. We will denote variables
by capital letters, and their values by small letters. Similarly, sets of variables will be denoted by bold capital letters, and sets of values by bold small letters. We will use
some graph-theoretic abbreviations: P a(Y)G , An(Y)G ,
and De(Y)G will denote the set of (observable) parents,
ancestors, and descendants of the node set Y in G, respectively. We will omit the graph subscript if the graph
in question is assumed or obvious. We will denote the set
{X ∈ G|De(X)G = ∅} as the root set of G. Finally, following [Pearl, 2000], we will denote Gxy to be an edge
subgraph of G where all incoming arrows into X and all
outgoing arrows from Y are deleted.
Having fixed our notation, we can proceed to formalize the
notions discussed in the previous section. A probabilistic
causal model is a tuple M = hU, V, F, P (U)i, where V
is a set of observable variables, U is a set of unobservable
variables distributed according to P (U), and F is a set of
functions. Each variable V ∈ V has a corresponding function fV ∈ F that determines the value of V in terms of
other variables in V and U. The distribution on V induced
by P (U) and F will be denoted P (V).
Sometimes it is assumed P (V) is a positive distribution.
In this paper we do not make this assumption. Thus, we
must make sure that for every distribution P (W|Z) that we
consider, P (Z) is positive. This can be achieved by making sure to sum over events with positive probability only,
and by only considering observations with positive probability. Furthermore, for any action do(x) that we consider,
it must be the case that P (x|P a(X)G \ X) > 0 otherwise

the distribution Px (V) is not well defined [Pearl, 2000]. Finally, because Px (y|z) = Px (y, z)/Px (z), we must make
sure that Px (z) > 0.
The induced graph G of a causal model M contains a node
for every element in V, a directed edge between nodes X
and Y if fY possibly uses the values of X directly to determine the value of Y , and a bidirected edge between nodes
X and Y if fX and fY both possibly use the value of some
variable in U to determine their respective values. In this
paper we consider recursive causal models, those models
which induce acyclic graphs.
In any causal model there is a relationship between
its induced graph G and P , where P (x1 , ..., xn ) =
Q
∗
∗
i P (xi |pa (Xi )G ), and P a (.)G also includes unobservable parents [Pearl, 2000]. Whenever this relationship
holds, we say that G is an I-map (independence map) of
P . The I-map relationship allows us to link independence
properties of P to G by using the following well-known
notion of path separation [Pearl, 1988].

context z such that Y, X, Z are disjoint is said to be identifiable from P in G if Px (y|z) is (uniquely) computable from
P in any causal model which induces G.
Note that because Z can be empty, conditional effects generalize the more commonly used notion of effect as Px (y).
The following lemma establishes the conventional technique used to prove non-identifiability in a given G.
Lemma 1 Let X, Y, Z be sets of variables. Assume there
exist two causal models M 1 and M 2 with the same induced
graph G such that P 1 (V) = P 2 (V), P 1 (x|P a(X)G \ X) >
0, Px1 (z) > 0, Px2 (z) > 0, and Px1 (Y|z) 6= Px2 (Y|z). Then
Px (y|z) is not identifiable in G.
Throughout the paper, we will make use of 3 rules of docalculus [Pearl, 1995]. These identities, derived from Theorem 1, are known to hold for interventional distributions:

Rule 1: Px (y|z, w) = Px (y|w) if (Y ⊥
⊥ Z|X, W)GX

Definition 1 (d-separation) A path p in G is said to be dseparated by a set Z if and only if either

Rule 2: Px,z (y|w) = Px (y|z, w) if (Y ⊥
⊥ Z|X, W)GX,Z

1 p contains a chain I → M → J or fork I ← M → J,
such that M ∈ Z, or
2 p contains an inverted fork I → M ← J such that
De(M )G ∩ Z = ∅.
Two sets X, Y are said to be d-separated given Z in G if all
paths from X to Y in G are d-separated by Z. The following
well-known theorem links d-separation of vertex sets in an
I-map G with the independence of corresponding variable
sets in P .
Theorem 1 If sets X and Y are d-separated by Z in G, then
X⊥
⊥ Y|Z in every P for which G is an I-map.
A path that is not d-separated is said to be d − connected.
A d-connected path starting from a node X with an arrow
pointing to X is called a back − door path from X.
In the framework of causal models, actions are modifications of functional relationships. Each action do(x)
on a causal model M produces a new model Mx =
hU, V, Fx , P (U)i, where Fx , is obtained by replacing fX ∈
F for every X ∈ X with a new function that outputs a constant value x given by do(x). Note that Mx induces G \ X.
Since subscripts are used to denote submodels, we will use
numeric superscripts to enumerate models and their associated probability distributions (e.g. M 1 , P 1 ).
We can now define formally the notion of identifiability of
conditional effects from observational distributions.
Definition 2 (Causal Effect Identifiability) The causal
effect of an action do(x) on a set of variables Y in a given

Rule 3: Px,z (y|w) = Px (y|w) if (Y ⊥
⊥ Z|X, W)GX,Z∗
where Z∗ = Z \ An(W)GX .
Note that one way to restate rule 2 is to say that it holds for
a set Z whenever there are no back-door paths from Z to Y
given the action do(x) and observations w.

4

Hedges and Unconditional Effects

A previous paper [Shpitser & Pearl, 2006] provided a complete algorithm, and a corresponding graphical condition
for identification of all effects of the form Px (y). In this section, we will provide an overview of these results. We first
consider a set of nodes mutually interconnected by bidirected arcs.
Definition 3 (C-component) Let G be a semi-Markovian
graph such that a subset of its bidirected arcs forms a spanning tree over all vertices in G. Then G is a C-component
(confounded component).
Any causal diagram is either a C-component, or can
be uniquely partitioned into a set C(G) of maximal Ccomponents. C-components are an important notion for
identifiability and were studied at length in [Tian, 2002].
The importance of this structure stems from the fact that
the distribution P factorizes into a set of interventional
distributions according to C(G). For example the graph
in Fig. 1 (a) has two C-components, {X, Z} and {Y },
so P (x, y, z) = Px,z (y)Py (x, z). Furthermore, each term

function ID(y, x, P, G)
INPUT: x,y value assignments, P a probability distribution,
G a causal diagram (an I-map of P).
OUTPUT: Expression for Px (y) in terms of P or
FAIL(F,F’).
P
1 if x = ∅, return v\y P (v).
2 if V 6= An(Y)G ,
return ID(y, x ∩ An(Y)G , P (An(Y)), An(Y)G ).
3 let W = (V \ X) \ An(Y)Gx .
if W 6= ∅, return ID(y, x ∪ w, P, G).
4 if C(GP
\ X) = {S
Q1 , ..., Sk },
return v\(y∪x) i ID(si , v \ si , P, G).
if C(G \ X) = {S},
5 if C(G) = {G}, throw FAIL(G, S).
P Q
(i−1)
).
6 if S ∈ C(G), return s\y Vi ∈S P (vi |vπ
7 if (∃S ′ )S ⊂ S ′ ∈ C(G), return ID(y, x ∩ S ′ ,
Q
(i−1)
(i−1)
∩ S ′ , vπ
\ S ′ ), S ′ ).
Vi ∈S ′ P (Vi |Vπ
Figure 2: A complete identification algorithm. FAIL propagates through recursive calls like an exception, and returns F, F ′ which form the hedge which witnesses nonidentifiability of Px (y). π is some topological ordering of
nodes in G.
in this factorization is identifiable. These observations allow one to decompose the identification problem into a set
of subproblems. We use C-components to define a graph
structure which turns out to be a key presence in all unidentifiable effects.
Definition 4 (C-forest) Let G be a semi-Markovian graph,
where Y is the root set. Then G is a Y-rooted C-f orest if all
nodes in G form a C-component, and all observable nodes
have at most one child.
If two C-forests share the same root set, and only one of
them contains any nodes in X, then the resulting graph
structure witnesses the non-identifiability of certain effects
of do(x). The structure in question is called a hedge.
Definition 5 (hedge) Let X, Y be sets of variables in G. Let
F, F ′ be R-rooted C-forests such that F ∩ X 6= ∅, F ′ ∩ X =
∅, F ′ ⊆ F , and R ⊂ An(Y)Gx . Then F and F ′ form a
hedge for Px (y).
Hedges precisely characterize non-identifiability of interventional joint distributions, as the following results show.
Theorem 2 Assume there exist R-rooted C-forests F, F ′
that form a hedge for Px (y) in G. Then Px (y) is not identifiable in G.

Proof: Consider the graph H = An(Y)G ∩ De(F )G , and
two models M 1 , M 2 which induce H. All variables in both
models are binary. In M 1 every variable is equal to the
bit parity of its parents. In M 2 the same is true, except all
nodes in F ′ disregard the parent values in F \ F ′ . All U are
fair coins in both models. It has been shown in [Shpitser
& Pearl, 2006] that M 1 and M 2 satisfy the conditions in
Lemma 1 for Px (y).
2
Theorem 3 (hedge criterion) Px (y) is identifiable from P
in G if and only if there does not exist a hedge for Px′ (y′ )
in G, for any X′ ⊆ X and Y′ ⊆ Y.
The proof can be found in [Shpitser & Pearl, 2006]. Whenever Px (y) is identifiable, we say that Px (y) does not contain any hedges. In such a case, the ID algorithm (pictured
in Fig. 2) computes the expression for Px (y) in terms of
P . It has also been shown in [Shpitser & Pearl, 2006] that
whenever Px (y) is not identifiable, ID returns the witnessing hedge, which entails the following result.
Theorem 4 ID is complete.
The previous results were also used to derive a completeness result for do-calculus
Theorem 5 The rules of do-calculus, together with standard probability manipulations are complete for determining identifiability of all effects of the form Px (y).
Proof: The proof, which reduces steps of the ID algorithm
to sequences of applications of do-calculus, can be found
in [Shpitser & Pearl, 2006].
2
Armed with a complete criterion and corresponding algorithm for identifying Px (y), we tackle the conditional version of the problem in the next section.

5

Identifiability of Conditional
Interventional Distributions

We now consider the problem of identifying distributions
of the form Px (y|w), where X, Y, W are arbitrary disjoint
sets of variables. Our approach will be to reduce this problem to a solved case where the set W is empty. One way to
accomplish this is to use rule 2 of do-calculus to transform
conditioning on W into interventions. Recall that whenever rule 2 applies to a set Z ⊆ W in G for Px (y|w) then
Px (y|w) = Px,z (y|w \ z). We want to use rule 2 in the most
efficient way possible and remove as many conditioning
variables as we can. The next lemma shows an application
of rule 2 on any set does not influence future applications
of the rule on other sets elsewhere in the graph.
Lemma 2 If rule 2 of do-calculus applies to a set Z in G
for Px (y|w) then there are no d-connected paths to Y that

pass through Z in neither G1 = G \ X given Z, W nor in
G2 = G \ (X ∪ Z) given W.
Proof: Clearly, there are no d-connected paths through Z in
G2 given W. Consider a d-connected path through Z ∈ Z
to Y in G1 , given Z, W. Note that this path must either
form a collider at Z or a collider which is an ancestor of Z.
But this must mean there is a back-door path from Z to Y,
which is impossible, since rule 2 is applicable to Z in G for
Px (y|w). Contradiction.
2

function IDC(y, x, z, P, G)
INPUT: x,y,z value assignments, P a probability
distribution, G a causal diagram (an I-map of P).
OUTPUT: Expression for Px (y|z) in terms of P or
FAIL(F,F’).
1 if (∃Z ∈ Z)(Y ⊥
⊥ Z|X, Z \ {Z})Gx,z ,
return IDC(y, x ∪ {z}, z \ {z}, P, G).
2 else let P ′ P
= ID(y ∪ z, x, P, G).
return P ′ / y P ′ .

The following is immediate.
Corollary 1 For any G and any conditional effect Px (y|w)
there exists a unique maximal set Z = {Z ∈ W|Px (y|w) =
Px,z (y|w \ {z})} such that rule 2 applies to Z in G for
Px (y|w).
Proof: Fix two maximal sets Z1 , Z2 ⊆ W such that rule 2
applies to Z1 , Z2 in G for Px (y|w). If Z1 6= Z2 , fix Z ∈
Z1 \ Z2 . By Lemma 2, rule 2 applies for {Z} ∪ Z2 in G for
Px (y|w), contradicting our assumption.
Thus if we fix G and Px (y|w), any set to which rule 2 applies must be a subset of the unique maximal set Z. It follows that Z = {Z ∈ W|Px (y|w) = Px,z (y|w \ {z})}. 2
This corollary states, in particular, that for any Px (y|w), we
can find a unique maximal set Z ⊆ W such that there are no
back-door paths from Z to Y given the context of the effect,
but there is such a back-door path from every W ∈ W \ Z
to Y.
However, even after a maximal number of nodes is removed from behind the conditioning bar using this corollary, we might still be left with a problem involving conditional distributions. The following key theorem helps us
relate this problem to the previously solved case.
Theorem 6 Let Z ⊆ W be the maximal set such that
Px (y|w) = Px,z (y|w \ z). Then Px (y|w) is identifiable in
G if and only if Px,z (y, w \ z) is identifiable in G.
Proof: See Appendix.

2

We can now put the results obtained so far together to construct a simple algorithm for identifiability of conditional
effects, shown in Fig. 3.
Theorem 7 (soundness) IDC is sound.
Proof: The soundness of the first line follows by rule 2
of do-calculus. The second line is just a standard conditional distribution calculation, coupled with an invocation
of an algorithm known to be sound from [Shpitser & Pearl,
2006].
2
We illustrate the operation of the algorithm by considering
the problem of identifying Px (y|z) in the graph G shown in
Fig. 1 (a). Because Y ⊥
⊥ Z|X, Z in Gx,z , rule 2 applies and

Figure 3: A complete identification algorithm for conditional effects.
we call the algorithm again with the expression Px,z (Y ).
This expression is an unconditional effect, so we call ID
as a subroutine. ID, in turn, succeeds immediately on line
6, returning the expression P (y|x, z), which we know is
equal to P (y|z) in G. Our results so far imply that IDC
will succeed on all identifiable conditional effects.
Theorem 8 (completeness) IDC is complete.
Proof: This follows from Theorem 4, Corollary 1 and Theorem 6.
2
With a complete algorithm for conditional effects, we can
graphically characterize all cases when such effects are
identifiable. To do this, we combine Theorem 6 to reduce
our problem to one of identifying unconditional effects, and
the hedge criterion, which is a complete graphical condition for such effects.
Corollary 2 (back-door hedge criterion) Let Z ⊆ W be
the unique maximal set such that Px (y|w) = Px,z (y|w \ z).
Then Px (y|w) is identifiable from P if and only if there does
not exist a hedge for Px′ (y′ ), for any Y′ ⊆ (Y ∪ W) \ Z,
X′ ⊆ X ∪ Z.
Proof: This follows from the hedge criterion and Theorem
6.
2
The name ’back-door hedge’ comes from the fact that both
back-door paths and hedge structures are key for identifiability of conditional effects. In particular, Px (y|w) is identifiable if and only if Px,z (y, w \ z) does not contain any
hedges and every W ∈ W \ Z has a back-door path to
some Y ∈ Y in the context of the effect.

6

Connections to Existing Algorithms

In this section, we explore the connection of our results
to existing identification algorithms for conditional effects.
One existing approach to identifying Px (y|w) consists of
repeatedly using probability manipulations and 3 rules of
do-calculus until the resulting expression does not involve

function c-identify(C, T, Q[T])
INPUT: T, C ⊆ T are both are C-components,
Q[T ] a probability distribution
OUTPUT: Expression for Q[C] in terms of Q[T ] or FAIL

function cond-identify(y, x, z, P, G)
INPUT: x,y,z value assignments, P a probability
distribution, G a causal diagram (an I-map of P).
OUTPUT: Expression for Px (y|z) in terms of P or FAIL.
1 let D = An(Y ∪ Z)GX , F = D \ (Y ∪ Z)

let A = An(C)GT
1 if A = C, return

P

T \C

2 assume C(D) = {D1 , ..., Dk }

P

2 if A = T , return FAIL

3 let N = {Di |c-identify(Di , CDi , Q[CDi ]) = FAIL}

3 if C ⊂ A ⊂ T , there exists a C-component T ′ such
′
that C ⊂ T ′ ⊂ A. return c-identify(C, TP
, Q[T ′ ])
′
(Q[T ] is known to be computable from T \A Q[T ])

4 if N = ∅, return

S
5 let F0 = F ∩ ( Di ∈N P a(Di )), I = C(D) \ N
6 remove the set {Di |P a(Di ) ∩ F0 6= ∅} from I and
add it to I0 (which is initially empty)
S
7 let B = (F \ F0 ) ∩ Di ∈I0 P a(Di )

Figure 4: A C-component identification algorithm from
[Tian, 2004].

8 if B 6= ∅, add all nodes in B to F0 , and go to line 6
S
9 if Y ∩ ( Di ∈(N ∪I0 ) P a(Di )) 6= ∅, return FAIL,

any interventional distributions. Our results imply that any
identifiable conditional effect can be identified in this way.

else return
Theorem 9 The rules of do-calculus, together with standard probability manipulations are complete for determining all effects of the form Px (y|z).
Proof: The IDC algorithm consists of two stages, the
first corresponds to repeated applications of rule 2 of docalculus, and the second to identifying the effect of the
form Px (y). The result follows by Theorem 5.
2
We next consider an algorithm proposed in [Tian, 2004].
See Fig. 5. This algorithm generalizes an earlier algorithm
for unconditional effects [Tian, 2002] which was proven
complete in [Shpitser & Pearl, 2006], [Huang & Valtorta,
2006]. Unfortunately, as we now show, the version of the
algorithm for conditional effects is not sound.
Lemma 3 cond-identify is not sound.
Proof: Consider the graph G′′ in Fig. 1 (c). We will consider the conditional effect Px (w|z) in this graph. Note that
by the back-door hedge criterion this effect is not identifiable in G′′ .
We now trace through the execution of the algorithm for
Px (w|z). In this case, D = {Y, Z, W }, F = {Y }, C(G) =
{{X, Z}, {Y }{W }}, C(D) = {{Z}, {Y }, {W }}. Now
identification of Q[{Y }] and Q[{W }] trivially succeeds,
while identification of Q[{Z}] from Q[{Z, X}] fails.
Therefore, I = {{Y }, {W }}, N = {{Z}}, F0 = F . Because {Y } is not a parent of any identifiable C-component,
line 6 does nothing. Because F0 = F , line 8 does nothing.
However, {W }∩{Y } = ∅, so the algorithm succeeds. This
implies the result.
2

P Q
Q[Di ]
P f Qi
y,f
i Q[Di ]

P Q
Q[Di ]
P f1 QDi ∈I1
D ∈I Q[Di ]
y,f
1

i

1

Figure 5: An identification algorithm from [Tian, 2004].
For each Di , we denote CDi ∈ C(G) such that Di ⊆ CDi .

7

Conclusions

We have presented a complete graphical criterion for
identification of conditional interventional distributions in
semi-Markovian causal models. We used this criterion to
construct a sound and complete identification algorithm for
such distributions, and prove completeness of a do-calculus
for the same identification problem.
This work closes long standing questions about identifiability of interventional distributions, but much more remains to be done. Certain kinds of causal effects or counterfactual statements of interest cannot be expressed as an
interventional distribution. For instance, certain kinds of
direct and indirect effects [Pearl, 2001], and path-specific
effects are represented instead as a probability of a formula in a certain modal logic [Avin, Shpitser, & Pearl,
2005]. Questions about identifiability of such effects in
semi-Markovian models are an open problem for future
work.
Acknowledgments
The authors thank anonymous reviewers for helpful comments. This work was supported in part by AFOSR grant
#F49620-01-1-0055, NSF grant #IIS-0535223, and MURI
grant #N00014-00-1-0617.

References
[Avin, Shpitser, & Pearl, 2005] Avin, C.; Shpitser, I.; and Pearl,
J. 2005. Identifiability of path-specific effects. In International
Joint Conference on Artificial Intelligence, volume 19, 357–
363.
[Halpern, 2000] Halpern, J. 2000. Axiomatizing causal reasoning. Journal of A.I. Research 317–337.
[Huang & Valtorta, 2006] Huang, Y., and Valtorta, M. 2006.
Identifiability in causal bayesian networks: A sound and complete algorithm. In Twenty-First National Conference on Artificial Intelligence.
[Kuroki & Miyakawa, 1999] Kuroki, M., and Miyakawa, M.
1999. Identifiability criteria for causal effects of joint interventions. Journal of Japan Statistical Society 29:105–117.
[Pearl & Robins, 1995] Pearl, J., and Robins, J. M. 1995. Probabilistic evaluation of sequential plans from causal models with
hidden variables. In Uncertainty in Artificial Intelligence, volume 11, 444–453.
[Pearl, 1988] Pearl, J. 1988. Probabilistic Reasoning in Intelligent Systems. Morgan and Kaufmann, San Mateo.
[Pearl, 1995] Pearl, J. 1995. Causal diagrams for empirical research. Biometrika 82(4):669–709.
[Pearl, 2000] Pearl, J. 2000. Causality: Models, Reasoning, and
Inference. Cambridge University Press.
[Pearl, 2001] Pearl, J. 2001. Direct and indirect effects. In Proceedings of UAI-01, 411–420.
[Shpitser & Pearl, 2006] Shpitser, I., and Pearl, J. 2006. Identification of joint interventional distributions in recursive semimarkovian causal models. In Twenty-First National Conference on Artificial Intelligence.
[Spirtes, Glymour, & Scheines, 1993] Spirtes, P.; Glymour, C.;
and Scheines, R. 1993. Causation, Prediction, and Search.
Springer Verlag, New York.
[Tian & Pearl, 2002] Tian, J., and Pearl, J. 2002. A general identification condition for causal effects. In Eighteenth National
Conference on Artificial Intelligence, 567–573.
[Tian, 2002] Tian, J. 2002. Studies in Causal Reasoning and
Learning. Ph.D. Dissertation, Department of Computer Science, University of California, Los Angeles.
[Tian, 2004] Tian, J. 2004. Identifying conditional causal effects.
In Conference on Uncertainty in Artificial Intelligence (UAI).

Appendix
We first prove two utility lemmas.
Lemma 4 Let M be a causal model. Assume P (y) > 0.
Then for any X disjoint from Y, there exists x such that
Px (y) > 0.
Proof: Let U be theP
set of unobservable variables in M . We
know that P (y) = Y(u)=y P (u). Fix u such that Y(u) =
y. We know such a u exists because P (y) > 0. We also
know u renders M deterministic. Let x be the value X(u)
assumes. Our conclusion now follows.
2
Lemma 5 Let F, F ′ form a hedge for Px (y). Then F ⊆
F ′ ∪ X.
Proof: It has been shown that ID fails on Px (y) in G and returns a hedge if and only if Px (y) is not identifiable in G. In
particular, edge subgraphs of the graphs G and S returned

H

X

H

X

Y
Y’
p

p
Y’
W

W’
(a)

Y

W

W’
(b)

Figure 6: Inductive cases for proving non-identifiability of
Px (y|w, w′ ).

by line 5 of ID form the C-forests of the hedge in question.
It is easy to check that a subset of X and S partition G. 2
Next, we rephrase the statement of the theorem slightly to
reduce ’algebraic clutter.’
Theorem 6 Let Px (y|w) be such that every W ∈ W
has a back-door path to Y in G \ X given W \ {W }.
Then Px (y|w) is identifiable in G if and only if Px (y, w) is
identifiable in G.
Proof: If Px (y, w) is identifiable in G, then we can
certainly identify Px (y|w) by marginalization and division. The difficult part is to prove that if Px (y, w) is not
identifiable then neither is Px (y|w).
Assume Px (w) is identifiable. Then if Px (y|w) were identifiable, we would be able to compute Px (y, w) by the chain
rule. Thus our conclusion follows.
Assume Px (w) is not identifiable. We also know that every
W ∈ W contains a back-door path to some Y ∈ Y in G \ X
given W\{W }. Fix such W and Y , along with a subgraph p
of G which forms the witnessing back-door path. Consider
also the hedge F, F ′ which witnesses the non-identifiability
of Px′ (w′ ), where X′ ⊆ X, W′ ⊆ W.
Let H = De(F )G ∪ An(W′ )G . We will attempt to show
that Px′ (Y |w) is not identifiable in H ∪ p. Without loss of
generality, we make the following three assumptions. First,
we restrict our attention to W′′ ⊆ W that occurs in H ∪ p.
Second, we assume all observable nodes in H have at most
one child. Finally, we assume p is a path segment which
starts at H and ends at Y , and does not intersect H. This
assumes Y 6∈ H. We will handle the case when Y ∈ H in
one of the base cases.
Consider the models M 1 , M 2 from the proof of Theorem 2
which induce H. We extend the models by adding to them
binary variables in p. Each variable X ∈ p is set to the bit
parity of its parents, if it has any. If not, X behaves as a fair
coin. If Y ∈ H has a parent X ∈ p, the value of Y is set to
the bit parity of all parents of Y , including X.

H

X

H

H

X

W’
(a)

C

W

W’
(b)

Figure 7: Inductive cases for proving non-identifiability of
Px (y|w, w′ ).

Call the resulting models M∗1 , M∗2 . Because M 1 , M 2
agreed on P (H), and variables and functions in p are the
same in both models, P∗1 = P∗2 . It has already been shown
that P 1 (x|P a(X)G \X) > 0, which implies the same is true
for P∗1 . We will assume w′′ assigns 0 to every variable in
W′′ . Note that in M∗1 , w′′ is equal to the bit parity of all the
U nodes in H and all parent-less nodes in p. Similarly, in
M∗2 w′′ is equal to the bit parity of all the U nodes in F ′ and
all parent-less nodes in p. It’s easy to see that P∗1 (w′′ ) > 0
1
and P∗2 (w′′ ) > 0. Now by Lemma 4, P∗x
(w′′ ) > 0 and
2
′′
P∗x (w ) > 0.
1
2
What remains to be shown is that P∗x
(y|w′′ ) 6= P∗x
(y|w′′ ).
We will prove this by induction on the path structure of
p. We handle the inductive cases first. In all these cases,
we fix a node Y ′ that is between Y and H on the path p,
and prove that if Px′ (y ′ |w′′ ) is not identifiable, then neither
is Px′ (y|w′′ ). Note that despite the fact that we represent
variable marginalization as a multiplication by a matrix as
a matter of convenience, we make sure to only sum over
values with positive probability of occurrence in the given
context.

Assume neither Y nor Y ′ have descendants in W′′ . If
Y ′ is a parent of Y as in Fig. 6 (a), then Px′ (y|w′′ ) =
P
′ ′′
′
′
y ′ P (y|y )Px′ (y |w ). If Y is a parent of Y , as in Fig.
6 (b) then the next node
be a child of Y ′ . ThereP in p must
′′
′
fore, Px′ (y|w ) = y′ P (y|y )Px′ (y ′ |w′′ ). In either case,
by construction P (Y |Y ′ ) is a 2 by 2 identity matrix. This
implies that the mapping from Px′ (y ′ |w′′ ) to Px′ (y|w′′ ) is
one to one. If Y ′ and Y share a hidden common parent U
as in Fig. 7 (b), then our result follows by combining the
previous two cases.
The next case is if Y and Y have a common child C which
is either in W′′ or has
in W′′ , as in Fig. 7 (a).
Pa descendant
′
′′
Now Px′ (y|w ) = y′ P (y|y , c)Px′ (y ′ |w′′ ). Because all
nodes in W′′ were observed to be 0, P (y|y ′ , c) is again a 2
by 2 identity matrix.
Finally, we handle the base cases of our induction. In all
such cases, Y is the first node not in H on the path p. Let
Y ′ be the last node in H on the path p.

Y

Y

Y’

Y
W

H

X

X

Y’ p

Y’ p Y

H’

X

W

W’

(a)

W
(b)

Y’
p’
Y

Y’
W

W’

(c)

Figure 8: Base cases for proving non-identifiability of
Px (y|w, w′ ).
Assume Y is a parent of Y ′ , as shown in Fig. 8 (a). By
Lemma 5, P
we can assume Y P
6∈ An(F \ F ′ )H . By con′′
1
struction,
P ′′ ( W =PY + 2 ∗′ U) (mod 2) in2 M∗ , and
( W = Y + 2 ∗ (U ∩ F )) (mod 2) in M∗ . If P
every
variable in W′′ is observed to be 0,Pthen Y = (2 ∗ U)
(mod 2) in M∗1 , and Y = (2 ∗ (U ∩ F ′ ))P
(mod 2)
in M∗2 .P
If an intervention do(x) is performed, ( W′′ =
2
Y +2∗ (U∩F ′ )) (mod 2) in M∗x
, by construction. Thus
′′
if W are all observed to be zero, Y = 0 with probability
1.PIt was shownP
in [Shpitser & Pearl, 2006] that in Mx1 ,
′′
( w = x+
U′ ) (mod 2), where U′ ⊆ U consists
of unobservable nodes with one child in An(X)F and one
child in F \ An(X)F . Because Y 6∈ An(F \ F ′ )H , we
P can
conclude that if W′′ are observed to be 0, Y = (x + U′ )
1
(mod 2) in M∗x
′ . Thus, Y = 0 with probability less than
1
′′
2
′′
1. Therefore, P∗x
′ (y|w ) 6= P∗x′ (y|w ) in this case.
Assume Y is a child of Y ′ . Now consider a graph G′ which
is obtained from H ∪ p by removing the (unique) outgoing arrow from Y ′ in H. If Px′ (y|w′′ ) is not identifiable in
G′ , we are done. Assume Px′ (y|w′′ ) is identifiable in G′ . If
Y ′ ∈ F , and R is the root set of F , then removing the Y ′ outgoing directed arrow from F results in a new C-forest,
with a root set R∪{Y ′ }. Because Y is a child of Y ′ , the new
C-forests form a hedge for Px′ (y, w′′ ). If Y ′ ∈ H \ F , then
removing the Y ′ -outgoing directed arrow results in substituting Y for W ∈ W′′ ∩ De(Y ′ )H . Thus in G′ , F, F ′ form
a hedge for Px′ (y, w′′ \ {w}). In either case, Px′ (y, w′′ ) is
not identifiable in G′ .
Now if Px′ (w′′ ) is identifiable in G′ , we are done. If not,
consider a smaller hedge H ′ ⊂ H witnessing this fact.
Now consider the segment p′ of p between Y and H ′ . We
can repeat the inductive argument for H ′ , p′ and Y . See
Fig. 8 (b). Note that this base case also handles the case
when Y ∈ H. We just let Y = Y ′ , and apply the previous
reasoning.
If Y and Y ′ have a hidden common parent, as is the case in
Fig. 8 (c), we can combine the first inductive case, and the
first base case to prove our result.
This completes the proof.

2

